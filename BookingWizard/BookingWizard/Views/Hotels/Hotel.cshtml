@model BookingWizard.ModelsVM.HotelVM

<html>
<head>
	<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

</head>
<body>

	<style>

		#map {
			height: 200px;
			width: 200px;
		}

		.controls {
			background-color: #fff;
			border-radius: 2px;
			border: 1px solid transparent;
			box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
			box-sizing: border-box;
			font-family: Roboto;
			font-size: 15px;
			font-weight: 300;
			height: 29px;
			margin-left: 17px;
			margin-top: 10px;
			outline: none;
			padding: 0 11px 0 13px;
			text-overflow: ellipsis;
			width: 400px;
		}

		.controls:focus {
			border-color: #4d90fe;
		}

	</style>

	<div class="container">
		<form method="post" asp-action="Hotel" asp-controller="Hotels">
			<div class="input-group mb-3">
				<input type="text" class="form-control" name="searchString" aria-label="Recipient's username" aria-describedby="button-addon2">
				<button class="btn btn-outline-secondary" type="submit" id="button-addon2">Search</button>
			</div>
		</form>


		<div class="container">
			<div class="row">
				<div class="col-md-6 mb-3">
					<div id="photoContainer">
						<img src="@Url.Action("GetPhoto", "PhotoHotels")?id=@Model.Image.Id" class="img-fluid" style="height: 300px;" />
					</div>
					<div style="text-align: center;">
					<button type="button" id="prevButton" class="btn btn-primary"><i></i></button>
					<button type="button" id="nextButton" class="btn btn-primary"><i></i></button>
					@if (User.IsInRole("Admin"))
					{
						<button type="button" id="deletePhotoButton" class="btn btn-danger"><i class="fas fa-chevron-right"></i></button>
						<button type="button" id="addButton" class="btn btn-success"><i class="fas fa-chevron-right"></i></button>
						<input type="file" id="photoInput" style="display: none;" accept="image/*" multiple>
					}
					</div>
				</div>
				<div class="col-md-6">
					<div class="text-center">
						<h1 class="display-4">@Model.HotelName</h1>
						<div class="lead">@Model.HotelLongDescription</div>
						<p class="lead">@Model.address.Addres</p>
					</div>
				</div>
			</div>
		</div>
		<div id="map" style="height: 400px; width: 100%;"></div>



		<div class="row m-4">
			@if (Model.roomList != null)
			{
				@foreach (var room in Model.roomList)
				{
					

					<div class="col-md-4 mb-4" >
						<div class="card" style="max-height: 700px;"> 
							<a href="@Url.Action("Room", "Rooms", new { id = room.Id })">

								<img src="@Url.Action("GetPhoto", "PhotoRooms")?id=@room.Image.Id" class="img-fluid" style="height: 300px;" />
							</a>
							<h4 class="text-center m-3">@room.Name</h4>
							<hr>
							<p class="text-center">Price: @room.roomPricePerNight.ToString("c")</p>

							@if (User.IsInRole("Admin"))
							{
								<a href="@Url.Action("Edit", "Rooms", new { id = room.Id })" class="btn btn-primary m-3">Edit</a>
							}
						</div>
					</div>
				}
			}
		</div>

		@if (User.IsInRole("Admin"))
		{
			<div class="mb-3 mt-3">
				<button class="btn btn-primary" type="button" id="toggleButton">ADD ROOM</button>
			</div>
			<div id="myContent" style="display: none;">
				<form method="post" action="/Hotels/AddRoom" enctype="multipart/form-data">
					<input type="hidden" asp-for="HotelName" />
					<input type="hidden" asp-for="Id" />

					<div class="mb-3">
						<label for="shortDescription" class="form-label">Short Description</label>
						<input type="text" class="form-control" id="shortDescription" asp-for="@Model.room.Description">
					</div>
					<div class="mb-3">
						<label for="roomNumber" class="form-label">Number</label>
						<input type="text" class="form-control" id="roomNumber" asp-for="@Model.room.Name">
					</div>
					<div class="mb-3">
						<label for="roomPrice" class="form-label">Price</label>
						<input type="text" class="form-control" id="roomPrice" asp-for="@Model.room.roomPricePerNight">
					</div>
					<div>
						@Html.DropDownListFor(x => x.room.NumberOfPeople, ViewBag.NumberList as SelectList, new { @class = "form-control" })
					</div>
					<div class="custom-file">
						<input asp-for="@Model.room.ImageModelList" class="custom-file-input form-control" multiple />
						<label class="custom-file-label text-left"></label>
					</div>

					<button type="submit" class="btn btn-primary">Add room</button>
				</form>
			</div>

			<form method="post" action="/Hotels/Delete">
				<input type="hidden" asp-for="Id" />
				<div class="mb-3">
					<button class="btn btn-danger" type="submit" id="deleteButton">Delete Hotel</button>
				</div>
			</form>
		}
	</div>

	<script>
		document.addEventListener("click", function (e) {
			let addButton = document.getElementById('toggleButton');
			let deleteButton = document.getElementById('deleteButton');
			let content = document.getElementById('myContent');

			if (e.target === addButton) {
				content.style.display = content.style.display === 'none' ? 'block' : 'none';
			}
			else if (e.target === deleteButton) {
				let confirmation = confirm("Are you sure you want to delete the hotel?");
				if (!confirmation) {
					e.preventDefault();
				}
			}
		});
	</script>

	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

	<!-- Ваш скрипт -->
	<script>
		var currentPhotoIndex = 0;
		var photos = @Html.Raw(Json.Serialize(Model.Images.Select( u => u).ToArray()));


		function showPhoto(index) {
			var photoId = photos[index].id;

			var photoUrl = '@Url.Action("GetPhoto", "PhotoHotels")' + '?id=' + photoId;
			
			$("#photoContainer").html('<img src="' + photoUrl + '" class="img-fluid" style="height: 400px;" />');
		}

		$(document).ready(function () {

			$("#addButton").click(function () {
				$("#photoInput").click();
			});

			$("#nextButton").click(function () {
				currentPhotoIndex = (currentPhotoIndex + 1) % photos.length;
				showPhoto(currentPhotoIndex);
			});

			$("#prevButton").click(function () {
				currentPhotoIndex = (currentPhotoIndex - 1 + photos.length) % photos.length;
				showPhoto(currentPhotoIndex);
			});

			$("#photoInput").change(function () {
				var files = this.files;
				var newList = @Html.Raw(Json.Serialize(Model.Images.Select(u => u.Name).ToList()));

				var formData = new FormData();
				for (var i = 0; i < files.length; i++) {
					formData.append("files", files[i]);
					newList.push(files[i].name);
				}

				var model = @Html.Raw(Json.Serialize(Model));
				formData.append("model", JSON.stringify(model));

				$.ajax({
					url: "/PhotoHotels/PhotoUpload",
					type: "POST",
					data: formData,
					contentType: false,
					processData: false,
					success: function (response) {

						window.location.href = "/Hotels/Hotel?id=" + @Model.Id;

					},
					error: function (xhr, status, error) {
						debugger;
						console.error("Error. Status:", status, "Error:", error);

					}
				});
			});




			$("#deletePhotoButton").click(function () {

				var currentPhoto = photoContainer.querySelector("img");
				var HotelId = @Model.Id;

				if (currentPhoto) {
					var photoName = currentPhoto.getAttribute("src").split("/").pop();
					var photoUrl = currentPhoto.getAttribute("src");
					var regex = /id=(\d+)/;
					var match = regex.exec(photoUrl);
					var id = match[1];
				}

				$.post("/PhotoHotels/DeletePhoto", { id: id, HotelId: HotelId })
					.done(function () {
						// Перенаправление на другой контроллер
						window.location.href = "/Hotels/Hotel?id=" + @Model.Id;
					})
					.fail(function (xhr, status, error) {
						// Обработка ошибки
						console.error("Error. Status:", status, "Error:", error);
					});
			});


		});




	</script>

	<script>
		function initMap() {
			const map = new google.maps.Map(document.getElementById("map"), {
				center: { lat: -33.8688, lng: 151.2195 },
				zoom: 13,
			});

			const address = @Html.Raw(Json.Serialize(Model.address.Addres)); // Ваш адрес

			const geocoder = new google.maps.Geocoder();
			geocoder.geocode({ address }, (results, status) => {
				if (status === google.maps.GeocoderStatus.OK) {
					const place = results[0];

					map.setCenter(place.geometry.location);

					const marker = new google.maps.Marker({
						map: map,
						position: place.geometry.location,
					});

					const infowindow = new google.maps.InfoWindow({
						content: `<div><strong>${place.formatted_address}</strong></div>`,
					});

					marker.addListener("click", () => {
						infowindow.open(map, marker);
					});
				} else {
					alert("Geocode was not successful for the following reason: " + status);
				}
			});
		}

		window.initMap = initMap;

	</script>


</body>
</html>






